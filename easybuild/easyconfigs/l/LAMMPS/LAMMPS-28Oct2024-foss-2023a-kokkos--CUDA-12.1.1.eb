easyblock = 'EB_LAMMPS'

name = 'LAMMPS'
version = '28Oct2024'
_cuda_suffix = '-CUDA-%(cudaver)s'
versionsuffix = '-kokkos-%s' % _cuda_suffix
_commit = 'f51963a'

homepage = 'https://www.lammps.org'
description = """LAMMPS is a classical molecular dynamics code, and an acronym
for Large-scale Atomic/Molecular Massively Parallel Simulator. LAMMPS has
potentials for solid-state materials (metals, semiconductors) and soft matter
(biomolecules, polymers) and coarse-grained or mesoscopic systems. It can be
used to model atoms or, more generically, as a parallel particle simulator at
the atomic, meso, or continuum scale. LAMMPS runs on single processors or in
parallel using message-passing techniques and a spatial-decomposition of the
simulation domain. The code is designed to be easy to modify or extend with new
functionality.
"""

toolchain = {'name': 'foss', 'version': '2023a'}
toolchainopts = {'usempi': True}

sources = [{
    'source_urls': ['https://github.com/ACEsuit/lammps/archive'],
    'download_filename': '%s.tar.gz' % _commit,
    'filename': SOURCE_TAR_GZ,
}]
checksums = ['43d1432782806ddae40a9f8fd3a7c7c0dc2fad0c74c440e1b189f42b33da2777']

builddependencies = [
    ('CMake', '3.26.3'),
    ('pkgconf', '1.9.5'),
    ('archspec', '0.2.1'),
]
dependencies = [
    ('CUDA', '12.1.1', '', SYSTEM),
    ('UCX-CUDA', '1.14.1', _cuda_suffix),
    ('NCCL', '2.18.3', _cuda_suffix),
    ('Python', '3.11.3'),
    ('libpng', '1.6.39'),
    ('libjpeg-turbo', '2.1.5.1'),
    ('netCDF', '4.9.2'),
    ('GSL', '2.7'),
    ('zlib', '1.2.13'),
    ('gzip', '1.12'),
    ('cURL', '8.0.1'),
    ('HDF5', '1.14.0'),
    ('PCRE', '8.45'),
    ('libxml2', '2.11.4'),
    ('FFmpeg', '6.0'),
    ('Voro++', '0.4.6'),
    ('kim-api', '2.3.0'),
    ('Eigen', '3.4.0'),
    ('PLUMED', '2.9.0'),
    ('SciPy-bundle', '2023.07'),
    # VTK package is auto-disabled if this dep is not available
    ('VTK', '9.3.0'),
    # We use a custom build of MDI
    ('MDI', '1.4.26'),
    ('PyTorch', '2.1.2', _cuda_suffix)
]

# To use additional custom configuration options, use the 'configopts' easyconfig parameter
# See docs and lammps easyblock for more information.
# https://github.com/lammps/lammps/blob/master/cmake/README.md#lammps-configuration-options

# OpenMP-Kokkos build is default in the current easyblock. One can switch to serial backend of Kokkos,
# which is claimed to be faster in pure MPI calculations
# configopts = "-DKokkos_ENABLE_SERIAL=yes "

# packages auto-enabled by easyblock
# 'GPU'    - if cuda package is present and kokkos is disabled
# 'KOKKOS' - if kokkos is enabled (by default)

# GCC 11/12 defaults to C++17 standard, need to be consistent
# configopts = "-DCMAKE_CXX_STANDARD=17 "

# include the following extra packages into the build
general_packages = [
    'AMOEBA',
    'ASPHERE',
    'ATC',
    'AWPMD',
    'BOCS',
    'BODY',
    'BPM',
    'BROWNIAN',
    'CG-DNA',
    'CG-SPICA',
    'CLASS2',
    'COLLOID',
    'COLVARS',
    'COMPRESS',
    'CORESHELL',
    'DIELECTRIC',
    'DIFFRACTION',
    'DIPOLE',
    'DPD-BASIC',
    'DPD-MESO',
    'DPD-REACT',
    'DPD-SMOOTH',
    'DRUDE',
    'EFF',
    'ELECTRODE',
    'EXTRA-COMPUTE',
    'EXTRA-DUMP',
    'EXTRA-FIX',
    'EXTRA-MOLECULE',
    'EXTRA-PAIR',
    'FEP',
    'GRANULAR',
    'H5MD',
    'INTERLAYER',
    'KIM',
    'KSPACE',
    'LATBOLTZ',
    'LEPTON',
    'MANIFOLD',
    'MANYBODY',
    'MC',
    'MDI',
    'MEAM',
    'MGPT',
    'MISC',
    'ML-IAP',
    'ML-PACE',
    'ML-POD',
    'ML-RANN',
    'ML-SNAP',
    'ML-MACE',
    'MOFFF',
    'MOLECULE',
    'MOLFILE',
    'MPIIO',
    'NETCDF',
    'OPT',
    'ORIENT',
    'PERI',
    'PHONON',
    'PLUGIN',
    'PLUMED',
    'POEMS',
    'PTM',
    'PYTHON',
    'QEQ',
    'QTB',
    'REACTION',
    'REAXFF',
    'REPLICA',
    'RIGID',
    'SCAFACOS',
    'SHOCK',
    'SMTBQ',
    'SPH',
    'SPIN',
    'SRD',
    'TALLY',
    'UEF',
    'VORONOI',
    'VTK',
    'YAFF',
]

# Excluded packages due to requiring additional (non-trivial) deps
# - ADIOS
# - LATTE
# - MESONT (requires very large files downloaded during build)
# - ML-HDNNP (requires N2P2)
# - ML-QUIP
# - MSCG
# - QMMM (setup seems complex)

install_python_packages = False

configopts = ' '.join([
    '-D CMAKE_CXX_STANDARD=17',
    '-D CMAKE_CXX_STANDARD_REQUIRED=ON',
    '-D CMAKE_CXX_COMPILER=%(start_dir)s/lib/kokkos/bin/nvcc_wrapper',
    '-D CMAKE_PREFIX_PATH=$EBROOTPYTORCH/lib/python%(pyshortver)s/site-packages/torch',
])

moduleclass = 'chem'
