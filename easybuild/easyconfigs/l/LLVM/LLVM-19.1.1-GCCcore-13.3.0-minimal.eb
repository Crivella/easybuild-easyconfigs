name = 'LLVM'
version = '19.1.1'
versionsuffix = '-minimal'

homepage = "https://llvm.org/"
description = """The LLVM Core libraries provide a modern source- and target-independent
 optimizer, along with code generation support for many popular CPUs
 (as well as some less common ones!) These libraries are built around a well
 specified code representation known as the LLVM intermediate representation
 ("LLVM IR"). The LLVM Core libraries are well documented, and it is
 particularly easy to invent your own language (or port an existing compiler)
 to use LLVM as an optimizer and code generator."""

toolchain = {'name': 'GCCcore', 'version': '13.3.0'}

source_urls = ['https://github.com/llvm/llvm-project/releases/download/llvmorg-%(version)s/']
sources = [
    'llvm-project-%(version)s.src.tar.xz',
]
patches = [
    'LLVM-18.1.8_envintest.patch',
]
checksums = [
    {'llvm-project-19.1.1.src.tar.xz': 'd40e933e2a208ee142898f85d886423a217e991abbcd42dd8211f507c93e1266'},
    {'LLVM-18.1.8_envintest.patch': '8e25dfab8a29a860717b4bd2d8cdd0e795433766d7fffbda32d06a2bde47058d'},
]

builddependencies = [
    ('binutils', '2.42'),
    ('Python', '3.12.3'),
    ('CMake', '3.29.3'),
    ('psutil', '6.0.0'),  # Needed to enable test timeout in lit
    ('lit', '18.1.8'),
    ('git', '2.45.1'),
]

dependencies = [
    ('libxml2', '2.12.7'),
    ('ncurses', '6.5'),
    ('zlib', '1.3.1'),
    ('Z3', '4.13.0'),
]

build_shared_libs = True

minimal = True

bootstrap = False
full_llvm = False
build_clang_extras = False
build_runtimes = False
build_lld = False
build_lldb = False
build_bolt = False
build_openmp = False
build_openmp_offload = False
build_openmp_tools = False
usepolly = False

python_bindings = False

# build_targets = ['all']
# disable_werror = True

skip_all_tests = False
skip_sanitizer_tests = False
test_suite_max_failed = 0
test_suite_timeout_single = 5 * 60
# test_suite_timeout_total = 10*3600

moduleclass = 'compiler'
