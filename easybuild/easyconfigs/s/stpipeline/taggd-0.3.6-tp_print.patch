Patch to exchange "tp_print" with "tp_vectorcall_offset" as suggested here:
https://github.com/numpy/numpy/issues/17937
to cater for newer Python versions.
Authors: Alexander Grund (TU-Dresden/Germany), J. Sassmannshausen (ICL/London)
diff --git a/taggd-0.3.6.orig/taggd/io/barcode_utils.c b/taggd-0.3.6/taggd/io/barcode_utils.c
index 066e386..2bc78dc 100644
--- a/taggd-0.3.6.orig/taggd/io/barcode_utils.c
+++ b/taggd-0.3.6/taggd/io/barcode_utils.c
@@ -3078,7 +3078,7 @@ static int __Pyx_modinit_type_init_code(void) {
   __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
   /*--- Type init code ---*/
   if (PyType_Ready(&__pyx_type_5taggd_2io_13barcode_utils_Barcode) < 0) __PYX_ERR(1, 11, __pyx_L1_error)
-  __pyx_type_5taggd_2io_13barcode_utils_Barcode.tp_print = 0;
+  __pyx_type_5taggd_2io_13barcode_utils_Barcode.tp_vectorcall_offset = 0;
   if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5taggd_2io_13barcode_utils_Barcode.tp_dictoffset && __pyx_type_5taggd_2io_13barcode_utils_Barcode.tp_getattro == PyObject_GenericGetAttr)) {
     __pyx_type_5taggd_2io_13barcode_utils_Barcode.tp_getattro = __Pyx_PyObject_GenericGetAttr;
   }
diff --git a/taggd-0.3.6.orig/taggd/io/fastq_utils.c b/taggd-0.3.6/taggd/io/fastq_utils.c
index b3152cd..76c46d4 100644
--- a/taggd-0.3.6.orig/taggd/io/fastq_utils.c
+++ b/taggd-0.3.6/taggd/io/fastq_utils.c
@@ -4208,25 +4208,25 @@ static int __Pyx_modinit_type_init_code(void) {
   __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
   /*--- Type init code ---*/
   if (PyType_Ready(&__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct__coroutine) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
-  __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct__coroutine.tp_print = 0;
+  __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct__coroutine.tp_vectorcall_offset = 0;
   if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct__coroutine.tp_dictoffset && __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct__coroutine.tp_getattro == PyObject_GenericGetAttr)) {
     __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct__coroutine.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
   }
   __pyx_ptype_5taggd_2io_11fastq_utils___pyx_scope_struct__coroutine = &__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct__coroutine;
   if (PyType_Ready(&__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_1_readfq) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
-  __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_1_readfq.tp_print = 0;
+  __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_1_readfq.tp_vectorcall_offset = 0;
   if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_1_readfq.tp_dictoffset && __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_1_readfq.tp_getattro == PyObject_GenericGetAttr)) {
     __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_1_readfq.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
   }
   __pyx_ptype_5taggd_2io_11fastq_utils___pyx_scope_struct_1_readfq = &__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_1_readfq;
   if (PyType_Ready(&__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_2_writefq) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
-  __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_2_writefq.tp_print = 0;
+  __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_2_writefq.tp_vectorcall_offset = 0;
   if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_2_writefq.tp_dictoffset && __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_2_writefq.tp_getattro == PyObject_GenericGetAttr)) {
     __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_2_writefq.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
   }
   __pyx_ptype_5taggd_2io_11fastq_utils___pyx_scope_struct_2_writefq = &__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_2_writefq;
   if (PyType_Ready(&__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_3_writefa) < 0) __PYX_ERR(0, 75, __pyx_L1_error)
-  __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_3_writefa.tp_print = 0;
+  __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_3_writefa.tp_vectorcall_offset = 0;
   if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_3_writefa.tp_dictoffset && __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_3_writefa.tp_getattro == PyObject_GenericGetAttr)) {
     __pyx_type_5taggd_2io_11fastq_utils___pyx_scope_struct_3_writefa.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
   }
diff --git a/taggd-0.3.6.orig/taggd/io/reads_reader_writer.c b/taggd-0.3.6/taggd/io/reads_reader_writer.c
index 938eb6d..927a10b 100644
--- a/taggd-0.3.6.orig/taggd/io/reads_reader_writer.c
+++ b/taggd-0.3.6/taggd/io/reads_reader_writer.c
@@ -5044,7 +5044,7 @@ static int __Pyx_modinit_type_init_code(void) {
   __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
   /*--- Type init code ---*/
   if (PyType_Ready(&__pyx_type_5taggd_2io_19reads_reader_writer___pyx_scope_struct__reader_open) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
-  __pyx_type_5taggd_2io_19reads_reader_writer___pyx_scope_struct__reader_open.tp_print = 0;
+  __pyx_type_5taggd_2io_19reads_reader_writer___pyx_scope_struct__reader_open.tp_vectorcall_offset = 0;
   if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5taggd_2io_19reads_reader_writer___pyx_scope_struct__reader_open.tp_dictoffset && __pyx_type_5taggd_2io_19reads_reader_writer___pyx_scope_struct__reader_open.tp_getattro == PyObject_GenericGetAttr)) {
     __pyx_type_5taggd_2io_19reads_reader_writer___pyx_scope_struct__reader_open.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
   }
